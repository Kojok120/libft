[test 34] ASSERT_EQ_I failed: ("-2") is not equal to expected ("-1"). func main at file srcs/test_ft_atoi.c, line 52
[test 35] ASSERT_EQ_I failed: ("1") is not equal to expected ("0"). func main at file srcs/test_ft_atoi.c, line 53
[test 10] ASSERT_EQ_STR failed: ("24") is not equal to expected ("42"). func main at file srcs/test_ft_itoa.c, line 26
[test 11] ASSERT_EQ_STR failed: ("-24") is not equal to expected ("-42"). func main at file srcs/test_ft_itoa.c, line 27
[test 12] ASSERT_EQ_STR failed: ("24") is not equal to expected ("42"). func main at file srcs/test_ft_itoa.c, line 28
[test 13] ASSERT_EQ_STR failed: ("7463847412") is not equal to expected ("2147483647"). func main at file srcs/test_ft_itoa.c, line 29
[test 14] ASSERT_EQ_STR failed: ("-8463847412") is not equal to expected ("-2147483648"). func main at file srcs/test_ft_itoa.c, line 30
[test 15] ASSERT_EQ_STR failed: ("6463847412") is not equal to expected ("2147483646"). func main at file srcs/test_ft_itoa.c, line 31
[test 16] ASSERT_EQ_STR failed: ("-7463847412") is not equal to expected ("-2147483647"). func main at file srcs/test_ft_itoa.c, line 32
srcs/test_ft_strmapi.c:22:27: error: implicit declaration of function 'ft_strmapi' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
    /* 1 */ ASSERT_EQ_STR(ft_strmapi("abcde", F), "ABCDE");
                          ^
srcs/test_ft_strmapi.c:22:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 1 */ ASSERT_EQ_STR(ft_strmapi("abcde", F), "ABCDE");
                          ^~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
srcs/test_ft_strmapi.c:23:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 2 */ ASSERT_EQ_STR(ft_strmapi("Hello World!", F), "HELLO WORLD!");
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
srcs/test_ft_strmapi.c:24:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 3 */ ASSERT_EQ_STR(ft_strmapi("12345", F), "12345");
                          ^~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
srcs/test_ft_strmapi.c:26:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 4 */ ASSERT_EQ_STR(ft_strmapi("ABCDE", F), "abcde");
                          ^~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
srcs/test_ft_strmapi.c:27:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 5 */ ASSERT_EQ_STR(ft_strmapi("Hello World!", F), "hello world!");
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
srcs/test_ft_strmapi.c:28:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 6 */ ASSERT_EQ_STR(ft_strmapi("12345", F), "12345");
                          ^~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
srcs/test_ft_strmapi.c:30:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 7 */ ASSERT_EQ_STR(ft_strmapi("ABCDE", F), "BCDEF");
                          ^~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
srcs/test_ft_strmapi.c:31:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 8 */ ASSERT_EQ_STR(ft_strmapi("Hello World!", F), "Ifmmp!Xpsme\"");
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
srcs/test_ft_strmapi.c:32:27: error: incompatible integer to pointer conversion passing 'int' to parameter of type 'char *' [-Werror,-Wint-conversion]
    /* 9 */ ASSERT_EQ_STR(ft_strmapi("12345", F), "23456");
                          ^~~~~~~~~~~~~~~~~~~~~~
./includes/libassert.h:50:44: note: expanded from macro 'ASSERT_EQ_STR'
# define ASSERT_EQ_STR(x, y) ASSERT_EQ_STR(x, y, __FILE__,__func__,__LINE__)
                                           ^
./includes/libassert.h:34:26: note: passing argument to parameter 'actual' here
void    ASSERT_EQ_STR(char *actual, char *expected,
                            ^
10 errors generated.
srcs/test_ft_striteri.c:31:18: error: implicit declaration of function 'ft_striteri' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
    f = toupper; ft_striteri(str, F);
                 ^
srcs/test_ft_striteri.c:31:18: note: did you mean 'ft_strtrim'?
../libft.h:45:10: note: 'ft_strtrim' declared here
char    *ft_strtrim(char const *s1, char const *set);
         ^
1 error generated.
srcs/test_ft_putchar_fd.c:20:23: error: implicit declaration of function 'ft_putchar_fd' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
    bzero(buf, 1024); ft_putchar_fd('a', fd); lseek(fd, 0, SEEK_SET); read(fd, buf, 1);
                      ^
1 error generated.
srcs/test_ft_putstr_fd.c:20:5: error: implicit declaration of function 'ft_putstr_fd' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
    ft_putstr_fd("hello", fd); lseek(fd, 0, SEEK_SET); bzero(buf, 1024); read(fd, buf, 1024);
    ^
1 error generated.
srcs/test_ft_putendl_fd.c:20:5: error: implicit declaration of function 'ft_putendl_fd' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
    ft_putendl_fd("hello", fd); lseek(fd, 0, SEEK_SET); bzero(buf, 1024); read(fd, buf, 1024);
    ^
1 error generated.
srcs/test_ft_putnbr_fd.c:20:5: error: implicit declaration of function 'ft_putnbr_fd' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
    ft_putnbr_fd(0, fd); lseek(fd, 0, SEEK_SET); bzero(buf, 1024); read(fd, buf, 1024);
    ^
1 error generated.
